```c++
#include <bits/stdc++.h>

using LL = long long;

const int max_N = 5000 + 21;

int n, k;

std::pair<int, int> p[max_N];

LL s[max_N], w[max_N], f[max_N / 2][max_N];

inline LL calc(int k, int j, int i) {
  return f[k - 1][j] + s[i] - s[j] - p[j + 1].first * (w[i] - w[j]);
}

void solve(int l, int r, int ql, int qr) {
  if (l > r) return;
  int mid = (l + r) >> 1;
  int qm = ql;
  for (int i = ql + 1; i < mid && i <= qr; ++i) {
    if (calc(k, qm, mid) > calc(k, i, mid)) qm = i;
  }
  f[k][mid] = calc(k, qm, mid);
  solve(l, mid - 1, ql, qm);
  solve(mid + 1, r, qm, qr);
}

int main() {
  scanf("%d%d", &n, &k);
  for (int i = 1; i <= n; ++i) {
    scanf("%d%d", &p[i].second, &p[i].first);
  }
  std::sort(p + 1, p + 1 + n);
  for (int i = 1; i <= n; ++i) {
    s[i] = s[i - 1] + 1LL * p[i].first * p[i].second;
    w[i] = s[i - 1] + p[i].second;
    f[1][i] = s[i] - w[i] * p[1].first;
  }
  for (int i = 2; i <= k; ++i) {
    solve(i, n, i - 1, n);
  }
  printf("%lld\n", f[k][n]);
}
```