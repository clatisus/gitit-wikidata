# Contest Info

date: 2019.04.04 19:00-24:00(UTC+8)

[practice link](https://open.kattis.com/problem-sources/ACM-ICPC%20World%20Finals%202019)

# Solutions

## B. Beautiful Bridges

**题目大意**：有一座山，它的形状用一条有 $n$ 个点的折线段表示，折线段下方到海平面是山的组成部分。现在要修建一座分段的拱桥，桥面高度为 $h$，每一段的桥柱只能建在折线段的端点上，且拱桥不能和山相交，但是可以相切（详见题图）。修桥的代价是 $\alpha\sum_{i=1}^{m}(h-y_{t_{i}})+\beta\sum_{i=1}^{m-1}(x_{t_{i+1}}-x_{t_{i}})$，求最小代价。

**题解**：显然 $\mathcal{O}(n^{2})$ `dp`。问题在于如何 `check` 每个区间修桥是否会和山相切。我们把拱桥拆成左右两个 $\frac{1}{4}$ 圆，不妨考虑左 $\frac{1}{4}$ 圆，固定左端点，容易发现半径小的 $\frac{1}{4}$ 圆是严格被大的 $\frac{1}{4}$ 圆包含的。因此我们很容易 $\mathcal{O}(n^{2})$ 地预处理出每个区间是否合法。

## I. Karel the Robot

**题目大意**：有一个机器人在一个有障碍的 $r\times c$ 网格中移动。现在给出 $e$ 段代码和对应的起始位置及方向，代码有如下几种指令：

- 向前移动一格

- 方向向左转 $90^{\circ}$

- 执行一个无参 `void` 函数

- 条件语句

- 循环语句

其中条件和循环语句的判断有 $5$ 种，`n w s e` 分别表示当前方向为 `n w s e` 时条件为真，`b` 表示当前方向前面一格为障碍时条件为真。循环语句只有 `while (!cond){body;}` 型。问执行完代码后的位置及方向，或判断代码为死循环。每段代码长度至多 $100$。

**题解**：一道编译题。

如果不考虑循环，那么直接 `dfs`，如果搜到了 `dfs` 栈中的位置，那么这整个栈中的位置都是死循环。对于循环，我们把它拆成一个新函数 $A$，定义

```
A{
    if (cond){
    }
    else{
        body;
        A;
    }
}
```

即可。

时间复杂度 $\mathcal{O}(100rce)$，主要难点在于编译器的编写。