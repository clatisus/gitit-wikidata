# Contest Info

date: 2018.11.13 17:21-22:21

practice link: opentrains 10352

# Solutions

## A. Maximum sum with swaps

**题目大意**：

给出一个数列$\{A_n\}$，$|A_i|\le10^9$，$1\le n\le10^5$.

可以进行不超过$0\le k\le10$次`std::swap(A[i], A[j])`这样的交换操作。

问最大的最大子段和是多少，并输出方案。

**题解**：

有效的交换一定是将选中的区间内的数与区间外的数交换。

具体是哪些对位置发生了交换并不重要，重要的是哪些位置换出去了，哪些位置换进来了。

令$dp[i][0/1/2][a][b]$为考虑前缀$i$，$i$在选定区间的前(0)中(1)后(2)三种情况下，换进来了$a$个数，换出去了$b$个数的最优解。

最终答案就是$\max dp[n+1][2][a][a]$，状态数$O(nk^2)$，转移$O(1)$。

输出方案如果完整记录每个`dp`状态的前驱将会`mle`。

但是有这样一个贪心的策略，如果我们选到的区间为$[L,R]$且交换了$m$次，最优解一定是将区间内的$m$个最小的换出去，区间外的$m$个最大的换进来。

因此，我们可以使用滚动数组，在每个`dp`状态顺便记录一下区间端点即可。

时间复杂度$O(n(k^2+\log{n}))$.