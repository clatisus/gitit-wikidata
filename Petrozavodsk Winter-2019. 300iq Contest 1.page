# Contest Info

date: 2019.05.15 10:30-15:30

[practice link](http://opentrains.snarknews.info/~ejudge/team.cgi?contest_id=001531)

# Solutions

## A. Angle Beats

**题目大意**：

给出一个$2\le n\le100$行$2\le m\le100$列的网格，每个格子要么是一个`+`，要么是一个`*`，要么是一个`.`。可以不重叠地放置一些$I$形或$L$形的由$3$个连通的格子组成的骨牌，要求$I$形的中心格子必须是`+`，另外两个格子必须是`.`，$L$形的中心格子必须是`*`或`+`，另外两个格子必须是`.`。问最多可以放下多少块骨牌，输出方案。

**题解**：相当于是一个二分图的$V$形最大匹配问题，`*`和`+`是左部顶点，`.`是右部顶点，`*`和`+`向其邻居的`.`连边，`*`要同时匹配其水平和竖直方向各一个邻居`.`，`+`要同时匹配其任意两个邻居`.`。拆点转化为一般图最大匹配问题：`*`拆成两个点，其中一个向水平方向的邻居`.`连边，另一个向竖直方向的邻居`.`连边；`+`成两个点，两个点都向其所有邻居`.`连边；同一个点拆成的两个点连一条边。对于原图中的`*`和`+`只有拆出来两个点都有不同的匹配点时贡献答案。带花树算法在一般图上的上界是$O(n^3)$，但这个建模应该有更低的上界，可以通过。



## E. Expected Value

**题目大意**：给你一个连通平面图，开始在 $1$。每次等概率随机走到一个邻点，问第一次走到 $n$ 的期望次数。

**题解**：由于可以用矩阵递推，考虑用 BM 求解。由于平面图满足 $E\le3V-6(V\ge3)$，因此这部分的复杂度为 $\mathcal{O}(V^{2})$。

假设 $P(x)=\sum_{i=0}^{+\infty}p_{i}x^{i}$，$Q(x)$ 为递推式，设 $R(x)=P(x)Q(x)$，显然 $R(x)$ 只有前 $V$ 项不为 $0$。我们所求即为
$$
\begin{aligned}
&P'(1)\\
=&(\frac{R}{Q})'(1)\\
=&\frac{R'(1)Q(1)-R(1)Q'(1)}{Q^{2}(1)}
\end{aligned}
$$
这部分的时间复杂度也为 $\mathcal{O}(V^{2})$，用 FFT 可以加速到 $\mathcal{O}(V\log V)$。

时间复杂度 $\mathcal{O}(V^{2})$。