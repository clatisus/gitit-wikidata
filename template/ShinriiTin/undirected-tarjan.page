```c++
//Tarjan,ÎÞÏòÍ¼ÇóË«Á¬Í¨·ÖÁ¿ºÍ±ßË«Á¬Í¨·ÖÁ¿,O(n+m) 
#define max_N (1000005)
#define max_M (2000005)
struct edge{
	int v,n;
	edge(int v=0,int n=0):v(v),n(n){}
}e[max_M<<1];
int head[max_N],tot=1;
//°´Ë³Ðò¼Ó±ß£¬±àºÅÎªiµÄÎÞÏò±ß¶ÔÓ¦µÄÁÚ½Ó±íÖÐµÄ±àºÅÎª2iºÍ2i+1 
inline void add_edge(int u,int v){
	e[++tot]=edge(v,head[u]),head[u]=tot;
	e[++tot]=edge(u,head[v]),head[v]=tot;
}
class Tarjan{
	private:
		int st[max_M<<1],top;
	public:
		int dfn[max_N],low[max_N],cnt;
		//lowÖµÏàÍ¬µÄµãÊôÓÚÍ¬Ò»¸ö±ßË«Á¬Í¨·ÖÁ¿ 
		bool cut[max_N],bridge[max_M];
		//¸îµãµÄbccnoÎÞÒâÒå ,bcc´Ó1¿ªÊ¼±àºÅ
		int bccno[max_N],bcc_cnt;
		vector<int>bcc[max_N];
		inline void init(int n,int m){
			cnt=bcc_cnt=0;
			for(int i=1;i<=n;++i)dfn[i]=cut[i]=bccno[i]=0;
			for(int i=1;i<=m;++i)bridge[i]=0;
		}
		void dfs(int x,int p){//µÚÒ»´Îµ÷ÓÃÊ±pÓ¦¸Ã´«Èë0
			low[x]=dfn[x]=++cnt;
			int ch=0;
			for(int i=head[x],y;i;i=e[i].n){
				y=e[i].v;
				if(y==p)continue;
				if(!dfn[y]){
					st[++top]=i;
					++ch,dfs(y,x);
					low[x]=min(low[x],low[y]);
					if(dfn[x]<=low[y]){
						cut[x]=1;
						bcc[++bcc_cnt].clear();
						for(int j,u,v;;){
							j=st[top--];
							u=e[j^1].v,v=e[j].v;
							if(bccno[u]!=bcc_cnt)bcc[bccno[u]=bcc_cnt].push_back(u);
							if(bccno[v]!=bcc_cnt)bcc[bccno[v]=bcc_cnt].push_back(v);
							if(j==i)break;
						}
					} 
					if(dfn[x]<low[y])bridge[i>>1]=1;
					//ÊÓÇé¿öÐèÒªµ¥¶À´¦ÀíÖØ±ß£¬ÖØ±ß¶¼²»ÊÇÇÅ 
				}
				else if(dfn[y]<dfn[x]){
					st[++top]=i;
					low[x]=min(low[x],dfn[y]);
				}
			}
			if(!p&&ch==1)cut[x]=0;
			//Èç¹ûdfsÊ÷ÖÐµÄ¸ù½ÚµãÖ»ÓÐÒ»¸ö×ÓÊ÷ÓëÆäÏàÁ¬£¬Ëü¿Ï¶¨²»ÊÇ¸îµã 
		}
};
```