# Contest Info

date: 2018.08.04 12:00-17:00

practice link: opentrains 10411

# Solutions

## A. Ability Draft
签到题，搜就完事儿了。

## C. Block, Stock and Two Smoking Galaxy Notes

**题目大意**：$n$ 个人，有 $m$ 对关系 $(u_i,v_i)$，表示这两个人能相互交流。让你从 $n$ 个人中选出一个 leader，并且把剩下的 $n-1$ 个人分成若干组。每个组要么 $1$ 个人，要么 $2$ 个人。如果是 $1$ 个人的小组，这个人要能与 leader 交流；如果是 $2$ 个人的小组，这两人要能相互交流，且存在一个人能与 leader 交流。

**题解**：枚举 leader，将能与他交流的人各自分为一组，然后剩下的人对这些人连边，求二分图匹配。

## D. Lunch Queue

**题目大意**：$n$ 个人陆续前来排队，每个人有一个颜色 $c_i$ 和一个权值 $a_i$。第 $i$ 人到达的时候，他会选一个最前的位置插队，位置满足：

插入之后与跟他同色的人相邻，且因为他插队而向后移动的人数不超过 $a_i$。

若不存在可以插入的位置，则排在队尾。

输出最后的队伍序列。

**题解**：

如果我知道第$i$个人插入队列之后的排名$rk_i$，那么就可以倒着还原出最终队列。

将队列分成若干段，每一段都是连续的$c_i$相同的人，用树状数组维护每段人数。

那么第$i$个人可以插入到排名不小于$i-a_i-1$的人后。

在树状数组中二分找到可以插入的最小段编号，再去$c_i$的段集合(可以使用`std::vector`实现）中二分找到最小的可以插入的段$gp$，否则新建一段。

那么第$i$个人要去的段已经确定了，但是排名还不清楚。

排名去树状数组中问一下之前段的总人数和$i-a_i-1$取`max`即可。

时间复杂度$O(n\log{n})$.

## F. Shuffle

**题目大意**：定义对字符串的操作 $\text{shuffle}(s_1\dots s_n)=s_1s_3\dots s_{n-1}s_2s_4\dots s_n$，其中 $n$ 是偶数。给定两个长度相等的字符串 $s,t$，求最少的操作次数使得 $s$ 变成 $t$。

**题解**：我们可以 $\mathcal{O}(n)$ 求出这个置换的循环节，打表可知这些循环节的 $lcm$ 大概也是 $\mathcal{O}(n)$ 级别的~~（并不会证）~~。因此我们可以对每个循环节列出一个同余方程，解这个同余方程组即可。对每个循环节我们用 `KMP` 匹配一下就可以知道需要循环多少次。注意到虽然可能有多个匹配，但是这些位置必然是模 $s$ 的循环节同余的。因此这里看似有多个方程，实际上可以化简成一个。

时间复杂度 $\mathcal{O}(n\log n)$。

## G. Piecewise Linearity

**题目大意**：给出平面上 $x$ 坐标严格递增的 $n+1$ 个点 $P_0,P_1,\dots,P_{n-1},P_n$，它们构成的图形为线段 $P_iP_{i+1}(1\leq i\leq n-2)$，以及射线 $P_1P_0,P_{n-1}P_n$。问你是否存在实数 $\lambda_1,\lambda_2,\dots,\lambda_m$ 和 $a_1,\dots,a_m$ 使得下列函数与其具有相同的图形：

$$
f(x)=\sum_{i=1}^m\lambda_i|x-a_i|
$$

**题解**：注意到 $f$ 必然有如下的形式：$\sum_{i=1}^{n-1}\lambda_{i}|x-x_{i}|$，且满足
$$
\begin{cases}
-\lambda_{1}-\lambda_{2}-\cdots-\lambda_{n-1}&=k_{0,1}\\
\lambda_{1}-\lambda_{2}-\cdots-\lambda_{n-1}&=k_{1,2}\\
\vdots\\
\lambda_{1}+\lambda_{2}+\cdots+\lambda_{n-1}&=k_{n-1,n}
\end{cases}
$$
其中 $k_{i,i+1}$ 表示点 $i$ 到点 $i+1$ 的斜率。容易发现这一方程有解，当且仅当 $k_{0,1}=k_{n-1,n}$。

满足这一条件后，就可以解出这个函数的各个系数了。之后还需要代入验证“截距”是否满足要求。

在这道题中，使用浮点数运算会带来一定的精度损失。由于本题只需要判断两个浮点数是否相等，因此我们可以随机选择一个较大的质数，在模该质数的意义下计算，碰巧相等的概率很小。

## H. Sketch

**题目大意**：定义一个序列 $\{a\}$ 的 $s_k$ 表示其所有长度为 $k$ 的不降子序列中最后一个元素的最小值。定义 $s(a)=s_1,\dots,s_l$ 是序列 $a$ 的一个速写，其中 $l$ 是 $a$ 最长不降子序列的长度。现给出 $k,n,m$，以及 $t_1,\dots,t_k$ ，让你构造一个序列 $a_1,\dots,a_n$，满足 $a_i\in [1,m]$，且如果 $t_i\neq -1$，那么必有 $t_i=s_i(1\leq i\leq k)$。同时 $s(a)$ 的长度等于 $k$。

**题解**：如果 $k>n$ 那么无解，否则我们把 $t_1,\dots,t_k$ 依次排列（如果 $t_i=-1$，那么我们让 $t_i=t_i-1,t_0=1$），这已经满足题目要求了，但是还剩下 $n-k$ 个数字。注意我们不能让 $s(a)$ 的长度大于 $k$。

我们往上述序列头部依次插入 $t_1+1,t_1+2,\dots,m$，直至长度为 $n$。每次插入一个数字 $x$ 的时候，我们找到 $t_1,\dots,t_k$ 中能续上 $x$ 的位置，然后将 $x$ 重复若干次，使得续上之后长度为 $k$。

## I. $\leq$ or $\geq$

**题目大意**：交互题。有 $n=10000$ 个栈，每个栈有 $k=10$ 个元素。一开始知道每个栈的栈顶，你要每次输出一个 $x$，接着 jury 会选择一个 $\leq$ 或者 $\geq$ 操作，将栈顶 $\leq$ 或者 $\geq x$ 的弹栈。要求你在 $50$ 次之内把所有栈清空。

**题解**：如果每次取中位数，那么可以被卡到 $k$ 次清空一半的栈，那么需要 $k\log n$ 次。考虑加权中位数，还剩 $k'$ 个元素的栈权重为 $2^{k'-1}$。

势能分析，一开始势能为 $n2^{k-1}$，每次选择带权中位数，会选到一半的势能，然后一次操作之后被选到的势能减半。所以一次操作相当于乘 $\frac{3}{4}$，最后势能为 $\frac{n}{2}$。所以需要 $\log_{\frac{4}{3}}2^k\approx 24$ 次操作。

## K. Hiding a Tree

**题目大意**：给出一棵树的输入 $n$，和 $(u_i,v_i)(1\leq u_i,v_i\leq n, i\in[1, n))$，目标是让 $n\oplus u_1\oplus v_1 \cdots u_{n-1}\oplus v_{n-1}=0$。你可以对允许的点进行重标号，但是重标号之后标号必须互不相等，标号范围 $[1,10^9]$。

**题解**：设度为奇数的允许重标号的点有 $\text{cnt}$ 个。令 $\text{ans} = n\oplus u_1\oplus v_1 \cdots u_{n-1}\oplus v_{n-1}$。

若 $\text{ans}=0$，那么满足条件，直接输出。

否则，若 $\text{cnt}=0$，那么无解。

若 $\text{cnt}=1$，设它为点 $a$，那么我们需要它重标号为 $t = \text{ans}\oplus a$。若 $t\neq 0$ 且 $t$ 未被使用过，那么将点 $a$ 重标号为 $t$。否则若 $t$ 是个偶数点且允许操作，那么我们把 $t$ 重标号为 $2^{17}$，把 $a$ 重标号为 $t$。否则无解。

若 $\text{cnt}\geq 2$，设其中两个为 $a,b$，令 $t=\text{ans}\oplus a\oplus b$。若 $t\neq 0$，那么我们把 $a$ 重标号为 $2^{17}$，把 $b$ 重标号为 $t\oplus 2^{17}$ 即可。否则若 $t=0$，如果 $\text{cnt}=2$ 那么无解，否则我们找到点 $c$，那么 $\text{ans}\oplus a\oplus c$ 一定非 $0$，我们按上述做法即可。

# Dirt Replay

I: `-3` 解法错误；忘删调试语句；算法里排序关键字错误

K: `-5` RE没判断cnt=0；corner case没分析清楚；Z来改的时候elseif漏写else

G：`-4` 精度问题eps

H：`-1` 算法错误，构造出来的序列不是最短的，判无解判错了