# Contest Info

date: 2017.10.04 13:15-18:15

[practice link](http://codeforces.com/gym/100959/)

# Solutions

## A. 2016

**题目大意**：定义一个正整数 $x$ divisorful 当且仅当满足 $y<x$ 且 $\sigma(y)>\sigma(x)$ 的正整数 $y$ 不超过 $1$ 个，求第 $k$ 个 divisorful 的正整数。若它大于 $10^{18}$ ，则输出 $-1$ 。

**题解**：感觉这样的数很少（实际上也就 $1000$ 多个），我们只需要把 $10^{18}$ 以内所有这样的数求出来就好了，下面给出标程的求法。

我们只考虑由前若干个质数组成的数，那么开始时我们只有 $1$ 。然后依次把 $2,3,5,7,\cdots$ 添加进去。例如，我们添加 $2$ 之后，就得到了 $1,2,4,\cdots,2^{59}$ 。注意在添加质数的时候，我们可以顺便计算出每个数的约数个数。添加完了以后，我们把这些数从小到大排序，然后枚举来删去不合法的数。具体来说，如果一个数 $x$ 的约数个数 $\sigma(x)$ ，比当前已经枚举过的，约数个数第二大的 $y$ 小，就将它删去。之后我们再以剩下还没被删的数为基础，添加下一个质数。如果添加某个质数后集合没有发生变化，就可以结束程序了。

## B. Airports

**题目大意** ：求曼哈顿距离最大生成树。

**题解** ：Boruvka 算法。已加入[模板](/template/coldwater/manhattan-st)。 

## C. Jump

**题目大意** ：给定一个无限的数轴上的 $n(n\leq 200)$ 个整点 $\{a_i\}(0\leq a_i\leq 10^4)$ 。给出 $Q(Q\leq 10^5)$ 次询问，每次询问给出两个点 $s,t$ ，问最少经过多少次操作从 $s$ 到达 $t$ 。一次操作定义为选择一个 $i$ ，然后从当前位置 $x$ 跳到位置 $2a_i-x$ 。

**题解** ：假设我们选择了操作序列 $i_1,i_2,\dots,i_k$ ，初始位置为 $s$ ，容易写出经过这些操作之后的位置 $t$ 满足：

$$
2\big(a_{i_1}-a_{i_2}+a_{i_3}-\cdots+(-1)^{k-1}\cdot a_{i_k}\big)=s+(-1)^{k-1}\cdot t
$$

也即：

$$
\sum_{j=1}^k(-1)^{j-1}\cdot a_{i_j}=\begin{cases}
\frac{1}{2}(s-t), &k \text{ is even}\\
\frac{1}{2}(s+t),&k \text{ is odd}
\end{cases}
$$

显然有 $s,t$ 不同奇偶的时候无解。那么有解的时候，我们就是要找到最小的 $k$ 使得上式成立。我们将步数分为奇偶两类，然后对左边用 bfs 求一个最短路即可。

## E. Mirror Rice Cake

签到题

## F. Number Cards

**题目大意**：你有无限张卡牌，编号从 $1$ 到无穷。现在有 $n\leq 20$ 张卡牌的颜色被限定了。问满足下列条件的 $M$ 有多少个：编号在 $[1,M]$ 内的卡牌颜色都相同， $[M+1,2M]$ 内的颜色都相同且和 $[1,M]$ 内的颜色都不相同， $[2M+1,3M]$ 内的颜色都相同，且和 $[1,2M]$ 内的颜色都不相同，$\cdots$

**题解**：不妨把所有位置的序号减一。若给定的卡片颜色完全相同，显然 $M$ 有无限种可能。若存在两张相同颜色的卡片，它们中间有一个异色的卡片，那么 $M$ 没有符合条件的取值。否则，一对相邻的 $(a_{i},c_{i})$ 和 $(a_{i+1},c_{i+1})$ 满足：

$$
\begin{cases}
&\lfloor\frac{a_{i}}{M}\rfloor=\lfloor\frac{a_{i+1}}{M}\rfloor,&c_{i}=c_{i+1}\\
&\lfloor\frac{a_{i}}{M}\rfloor<\lfloor\frac{a_{i+1}}{M}\rfloor,&c_{i}\neq c_{i+1}\\
\end{cases}
$$

由于对每个数 $a_{i}$ ，我们可以在 $\mathcal{O}(\sqrt{a_{i}})$ 的时间内知道它除以每个数的商的情况（整除），所以我们只要暴力地求解（不）等式就好了。

## L. String Modification

**题目大意** ：给定两个字符串 $s,t$ ，询问是否可以通过若干次操作，使得串 $s$ 变为串 $t$ 。一次操作定义为选择 $s$ 中的一个字母，在它右边插入一个和它不同的字母。

**题解** ：首先我们要注意到一个事实。假设 $s_i$ 在 $t$ 中对应 $t_j$ ，那么只要 $t_{j+1}\neq t_j$ ，我们就可以在 $s_i$ 的后面添加任意长的任意字符。例如串 `e` 可以变为串 `eggeeggabcd` ，因为我们只需要每次选择合适的字符，在其后面添加新的字符。

考虑动态规划。我们定义 $f[i][j]$ 表示 $s[i...n)$ 是否可以变为 $t[j...m)$ 。那么答案即为 $f[0][0]$ 。再定义：

$$
g[i][j]=\bigcup_{k=j}^{m}f[i][k]
$$

显然 $g[i][j]$ 直接从 $g[i][j+1]\cup f[i][j]$ 转移而来。当 $s_i=t_j$ 的时候，我们考虑 $f[i][j]$ 从何转移而来。我们可以不添加字符，那么从 $f[i+1][j+1]$ 转移而来。添加字符的时候，需要满足 $t_{j+1}\neq t_j$ ，那么可以从 $g[i+1][j+2]$ 转移而来。

初值为 $f[n][m]=1,g[n][i]=1(0\leq i\leq m)$ 。

## M. Team Competition

**题目大意**：给 $n(n\leq 1000)$ 个人安排训练计划。要求如下：

- 天数 $t\in [1, n^2]$ 
- 每天恰好有三个不同的人参加训练
- 令 $f(p,q)$ 表示编号为 $p$ 和编号为 $q$ 的人一起训练的天数，要求对 $\forall p,q$ 有 $f(p,q)$ 相等

**题解**：当 $n$ 为奇数的时候，我们将 $n$ 个人放在一个环上。枚举所有的等腰三角形，我们会得到 $n \choose 2$ 天的训练计划。容易发现，对 $\forall p,q$ 有 $f(p,q)\equiv 3$ ，显然每对 $(p,q)$ 会作为等腰三角形的腰 $2$ 次，底 $1$ 次。

当 $n$ 为偶数的时候，情况稍微复杂一点。我们先将 $n-1$ 个人按照上述方案安排训练。但是我们还需要给第 $n$ 个人安排训练，显然最后的 $f(p,q)>3$ ，再注意到现在使用的天数只有 $n-1 \choose 2$ ，所以我们可以猜想最后 $f(p,q)\equiv 6$ 。

这样分析之后，我们可以选择将长度（横跨的边的数量）为 $1,2$ 的边再使用几次。我们将 $n,i,i+1 (1\leq i < n)$ 这个三角形训练两次，将 $n,i,i+2(1\leq i<n)$ 这个三角形训练一次。现在对于每条新加的边，它的 $f$ 为 $6$ 。对于之前已有的长度为 $1$ 的边，$f$ 增加了 $2$；对于之前已有的长度为 $2$ 的边，$f$ 增加了 $1$ 。现在我们还需要将长度为 $1$ 的边 $f$ 增加 $1$ ，将长度为 $2$ 的边 $f$ 增加 $2$ ，以及将其他长度的边 $f$ 增加 $3$ 。要做到这一点，我们只需要枚举所有腰长度大于等于 $2$ 的等腰三角形即可。这样，长度为 $2$ 的边会作为腰两次，而不会作为底出现。长度为 $1$ 的边会作为底一次。