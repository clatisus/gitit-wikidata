# Contest Info

date: 2019.01.12 15:10-20:10

[practice link](https://codeforces.com/gym/101933)

# Solutions

## A. Altruistic Amphibians

**题目大意**：深为 $d$ 的井底有 $n$ 只青蛙，每只青蛙有一个身高 $h_{i}$，重量 $w_{i}$，跳跃高度 $l_{i}$。青蛙们可以叠起来跳出井，设从上到下依次是青蛙 $t_{1},\cdots,t_{m}$，那么首先对每个 $2\le i\le m$ 要满足 $\sum_{j=1}^{i-1}w_{t_{j}}<w_{t_{i}}$。如果 $l_{t_{1}}+\sum_{i=2}^{m}h_{t_{i}}>d$，那么青蛙 $t_{1}$ 可以跳出井。问最优策略下最多能有多少只青蛙跳出井？保证 $\sum w_{i}\le10^{8}$。

**题解**：显然每只青蛙能否跳出井是相互独立的。设 $dp[i]$ 表示当前已经摆放了一些青蛙，并且在它们上面再叠放总重量 $i-1$ 的青蛙时不会违反规则，最多摆放的高度是多少。对于每只青蛙 $i$，考虑它如何转移 $dp$。我们有
$$
\begin{cases}
&dp[w_{i}]:=\max(dp[w_{i}],dp[j]+h_{i})&(j=2w_{i})\\
&dp[j-w_{i}]:=\max(dp[j-w_{i}],dp[j]+h_{i})&(w_{i}+1\le j<2w_{i})
\end{cases}
$$


转移时要注意不断做后缀最大值。

时间复杂度 $\mathcal{O}(n+\sum w_{i})$，空间复杂度 $\mathcal{O}(\sum w_{i})$。

## B. Baby Bites

签到题。

## C. Code Cleanups

签到题。

## D. Delivery Delays

**题目大意**：无向图的 $1$ 号点有一个披萨店，他会依此接到若干个订单 $(s_i,u_i,t_i)$，分别表示接到订单的时间，需要送达的节点，披萨准备好可以送出的时间。保证 $s,t$ 分别递增。骑手可以携带任意数量的披萨，但是必须按照订单顺序送货。求最小的最大等待时间。

**题解**：二分答案。dp 验证。设 $\text{dp}[i]$ 表示前 $i$ 个订单送达之后的最小时间。用 Dijkstra 预处理任意两点的最短路。预处理 $\text{cost}[i][j]$ 表示订单 $[i,j]$ 的配送时间。 $\text{pre}[i][j]=\max_{k=i}^j \text{cost}[i][k] - s_k$。

转移的时候，枚举 $j$ 到 $i$ 一起送。令 $s=\max(\text{dp}[j-1],t_i)$，如果 $s+\text{dis}[1][u_j]+\text{pre}[j][i]>mid$，那么不合法，否则用 $s+\text{dis}[1][u_j]+\text{cost}[j][i]+\text{dis}[u_i][1]$ 更新 $\text{dp}[i]$。

## E. Explosion Exploit

暴搜。注意状态内部不需要有序，即可缩减大量状态。

## I. Intergalactic Bidding

签到题。

## J. Jumbled String

**题目大意**：让你构造一个 0/1 串，使得 `00`,`01`,`10`,`11` 作为子序列出现各 $a,b,c,d$ 次。

**题解**：通过 $a,d$ 可以解出 0 和 1 的个数。对于 000...001111...111 这个串，我们考虑从左往右把每个 1 往左边移动，移动一次 `01` 的个数少一个，并且 `10` 的个数多一个。注意 $a,d$ 等于 0/1 的时候有多个解。

## K. King’s Colors

**题目大意**：给你一棵 $n$ 个点的树，问你恰用 $k$ 种颜色染色，使得相邻边颜色不同的方案数。

**题解**：显然对 $\forall j\in[1,k]$ 分别计算使用不超过 $j$ 种颜色染色的方案数，然后容斥。

对每种颜色计算时，朴素的想法是记 $dp[u][i]$ 表示 $u$ 的子树，$u$ 涂颜色 $i$ 的方案数。另外注意到每种颜色是无差别的，因此可省去第二维。

时间复杂度 $\mathcal{O}(nk)$。