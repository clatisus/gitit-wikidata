# Contest Info

date: 2018.11.29 19:30-24:30

[practice link](https://codeforces.com/gym/101964)

# Solutions

## C. Tree

**题目大意**：

给出一棵$n\le1000$个节点的树，每个点要么是黑点要么是白点。

要求选出恰好$m\le n$个黑点（保证至少有$m$个黑点），最小化选出的点集中两个点的最大距离。

**题解**：

枚举每个点或边为点集的中心，求出每个点到它的距离，如果距离小于$x$的黑点有不少于$m$个则$x$是合法的解，求一个最小的$x$即可。

时间复杂度$O(n^2)$.

## D. Space Station

**题目大意**：

给出一棵$n\le1000$个节点的树，每条边有个权值，现在要从$1$号点出发，遍历每一条边至少一次，再回到$1$号点，可以不超过$m\le1000$次使用跳跃，花费$k$的代价，从当前所在的任意点移动到另一个任意的点，求最小的代价。

**题解**：

假设不使用跳跃，一定是从$1$号点出发`dfs`一遍再回到$1$号点，每条边恰好经过了$2$次。

如果使用一次跳跃从$u$移动到了$v$，可以让$u$到$v$路径上的边的少经过一次。

如果有两次跳跃的路径（边集）有交，那么交的边没有被遍历到，就不合法。

问题转化为，选择不超过$m$条不相交路径（考虑至少包含一条边），最大化路径上的边权和。

要选择不相交的路径，那么对于每一个子树，经过了子树根的路径最多只有一条，否则就不合法。

令$dp[u][i]$表示$u$子树内有$i$个点作为路径的端点，最大的路径边权和。

当$i$为奇数的时候，有路径跨越了子树，否则，路径全在子树内部。

转移时子树背包一下即可，时空复杂度$O(n^2)$.

## I. Inversion

**题目大意**：

$p_1,\cdots,p_n$是$1$到$n$的排列。

给出一个$n\le1000$个点，$m$条边的简单无向图，两个点$u<v$之间有边当且仅当$p_u>p_v$.

求图中的极大独立集数量，即集合内部不存在边，集合外每个点至少存在一条与集合内点的边。

**题解**：

通过不等关系建出一个`DAG`，拓扑排序一下就得到了$p$数组。

图中的极大独立集等价于$p$中的极大单调上升子序列，令`dp[i]`表示前缀$i$以$i$结尾的极大单调上升子序列数量。

对于每个前缀最小值的位置$i$，可以作为开头的位置，`dp[i]`初值为$1$，否则为$0$.

从小到大递推，当$dp[i]$计算完毕后，枚举$j>i$，如果$p[i]<p[j]$，且不存在$i<k<j$且$p[i]<p[k]<p[j]$的话，`dp[i]`就能转移到`dp[j]`，这个可以通过二维前缀和$O(1)$判断。

再对于每个后缀最大值的位置$i$，可以作为结束的位置，将`dp[i]`计入答案即可。

时间复杂度$O(n^2)$.

## K. Points and Rectangles

**题目大意**：

二维平面上$q\le10^5$次事件，每次出现一个点或者一个与坐标轴平行的矩形，问每次事件后，有多少对矩形和点的包含关系。

**题解**：

无论是矩形找点还是点找矩形都可以容斥一下转成二维数点，按时间分治一下，时间复杂度$O(n\log^2{n})$，空间复杂度$O(n)$.