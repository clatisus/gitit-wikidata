# Contest Info

date: 2018.08.11 12:00-17:00

[practice link](https://www.nowcoder.com/acm/contest/146#question)

# Solutions
## H. Playing games

**题目大意**：给 $n\le 5\times10^{5}$ 个数（范围 $5\times 10^{5}$），问最多能选多少个使得它们异或和为 $0$。

**题解**：记 $n$ 个数的和为 $\text{sum}$。从反面思考，即为最少选多少个数使得它们的异或和为 $\text{sum}$。我们以每个数为一行，构造一个模 $2$ 意义下的矩阵，易知它有一组大小不超过 $19$ 的基，也就是说我们可以用不超过 $19$ 个向量表示 $\text{sum}$。

设 $f(x)=\sum_{i=0}^{2^{19}}\text{cnt}_{i}x^{i}$，在异或卷积的意义下定义多项式乘法，那么 $[x^{j}]f^{i}(x)$ 就表示用 $i$ 个数（可能重复）表示 $j$ 的方案数。于是我们可以依次计算 $[x^{\text{sum}}]f^{0}(x),[x^{\text{sum}}]f^{1}(x),\cdots$，直到它大于 $0$ 为止。虽然之前我们说选取的数可以重复，但是**最少**的能表示出 $\text{sum}$ 的数肯定是不会重复的，所以这并没有影响。

由于乘了几次以后系数就会变得很大，所以要取模，恰好被模数整除的概率很小，如果实在不放心可以多取几个模数。

如果每次都逆 $FWT$，复杂度为 $\mathcal{O}(n\log^{2} n)$。但事实上我们没有必要这样做，每次乘法后我们只需要知道 $x^{\text{sum}}$ 的系数，这一项我们很容易 $\mathcal{O}(n)$ 求出，而不需要将整个多项式逆 $FWT$。

时间复杂度 $\mathcal{O}(n\log n)$。

## J. Calculating sums

**题目大意**：给出 $n\le10^{9},m\le10^{6},k\le10^{9}$，计算 $\sum_{i=0}^{n}\sum_{j=0}^{m}{i\choose j}[i\equiv0\pmod{2}][j\equiv0\pmod{2}]$。

**题解**：不妨先把 $n$ 和 $m$ 向下取到偶数。设 $\displaystyle{f(x)=(x+1)^{0}+(x+1)^{2}+\cdots+(x+1)^{n}=\frac{(x+1)^{n+2}-1}{(x+1)^{2}-1}}$，那么答案为 $\sum_{i=0}^{m}[i\equiv0\pmod{2}][x^{i}]f(x)$。我们有 $\displaystyle{f(x)=\frac{\sum_{i=0}^{n+1}{n+2\choose i+1}x^{i}}{x+2}}$。这个除法很容易计算，我们有 $[x^{i}]f(x)+2[x^{i+1}]f(x)={n+2\choose i+2}$。

我们将 $k$ 分解为 $s\cdot2^{t}$，其中 $s$ 是奇数。显然我们可以在模 $s$ 和 $2^{t}$ 的意义下分别计算然后 $CRT$。模 $s$ 的时候，$2$ 存在逆元，可以直接递推，只需要在算组合数时注意单独处理 $s$ 中的质数即可。这部分的复杂度为 $\mathcal{O}(m\log s)$。模 $2^{t}$ 的时候，我们不能直接递推了（否则要除 $2$）。注意到 $[x^{i}]f(x)=\sum_{j=0}^{+\infty}(-2)^{j}{n+2\choose i+j+2}$，而 $j\ge t$ 的所有项在模 $2^{t}$ 意义下就都为 $0$ 了，所以我们可以计算 $\sum_{j=0}^{t-1}(-2)^{j}{n+2\choose i+j+2}$。这部分的复杂度为 $\mathcal{O}(mt)$。

总复杂度 $\mathcal{O}(m\log k)$。

# Dirt Replay

Replay 个屁 慌得一批