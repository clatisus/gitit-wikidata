# Contest Info

date: 2018.08.09 12:00-17:00

[practice link](https://www.nowcoder.com/acm/contest/147#question)

# Solutions

## B. Enumeration not optimization 

**题目大意**：

给出一个$n\le12$个点，$m\le1000$条边的无向连通图。

对于原图的任意一个有根生成树，树中一条边的贡献是它的边权乘上两个点中较大的深度。

求所有有根生成树中边的贡献和之和，取模。

**题解**：

令`f[u][s]`和`g[u][s]`分别为以`u`为根其它点的集合为`s`时的所有方案的深度之和的和，以及方案数。

转移时枚举`s`的一个子集（包括`lowbit(s)`），这个子集只由一条边连接到`u`，剩下的部分随意，就不会重复了。

最后枚举每条边，枚举两个端点两边的连通块集合算答案即可。

根据实现方法不同，时间复杂度为$O(n^2\cdot3^n)$或$O(n^2\cdot2^n+n\cdot3^n)$.

## F. Typing practice 

**题目大意**：

有$n\le4$个字符串$s_1,\cdots,s_n$，总长度$m\le10^5$，只有小写英文字母

之后有个在打字机上的操作序列$t$，长度$k\le10^5$，每次操作可以在末尾加一个字母或者退格。

对于每次操作之后，询问至少要加多少字母，使得末尾出现至少一个字符串$s_i$。

**题解**：

可以做$n$次`kmp`再对每个串的答案取最小，撤销操作会使`kmp`的势能分析失效，直接做是平方级别的，但是可以`bfs`一次`fail`树预处理出所有转移，复杂度$O(\Sigma\cdot m+nk)$.



## G. Longest Common Subsequence 

**题目大意**：

给出四个长度为$n\le10000$的数列，值域都是$[1,n]$.

满足前三个数列中，任意一个数字出现次数不超过$2$，求四个数列的`LCS`.

**题解**：

第四个数列选择任意一种数字作为结尾，对应的其在前三个数列中的出现位置只有不超过$8$种。

按`LCS`的结尾在第四个数列中的位置升序进行`dp`，用`KD`树维护一下三维偏序求最大值即可。

复杂度$O(n^\frac{5}{3})$.

# Dirt Replay

A: `-1` 一个地方取模写错

F: `-3` 退格处理错误；算法TLE；假的记忆化TLE（小错误掩盖了算法错误）

G: `-2` kd树询问坐标没减一；变量n打成了tot导致RE