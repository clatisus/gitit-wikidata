# Contest Info

date: 2018.08.19 12:00-17:00

[practice link](https://www.nowcoder.com/acm/contest/148#question)

# Solutions

## A. Rikka with Lowbit

**题目大意**：定义操作 $f(x)$ 等概率地成为 $x+\text{lowbit}(x)$ 或者 $x-\text{lowbit}(x)$。给出长度为 $n\le10^5$ 的数列 $\{a_i\}$，$m\le10^5$ 操作，或者将一个区间的数都从 $a_i$ 变成 $f(a_i)$ ，或者询问一个区间的和的期望值是多少，输出期望乘上 $2^{nm}$ 后对 $998244353$ 取模的值。

**题解**：逗你玩题，$E(f(x))=x$，处理前缀和即可，$\mathcal{O}(n+m)$。

## C. Rikka with Rotate

**题目大意**：设 $S$ 是平面上的一个非空整点集，定义 $f(S,k)$ 表示用 $k$ 种颜色染 $S$ 中的点本质不同的方案数。两种方案本质相同定义为，存在平面上的一个点 $(x,y)$（可以是实数）和一个角度 $\alpha$，使得第一种方案绕 $(x,y)$ 旋转 $\alpha$ 度后与第二种方案相同。给出一个点集 $P$ 和 $k$，求 $\sum_{S\subset P,S\neq\emptyset}f(S,k)$。坐标范围 $\pm10^{8}$。

**题解**：注意到如果一个点集旋转后与自己重合，那么必然有它是由若干个以旋转中心为中心的正多边形的所有顶点组成的。而我们知道整点正多边形只有正方形（另外还可能退化成以旋转中心为中点的一条线段的两个端点，或者只有旋转中心这一个点）。数正方形的个数可以枚举两个点作为正方形的一条对角线， hash 判断剩下的两个点是否存在。之后就是简单的 Polya 定理了。

我们以正方形为例，设以某点为中心的正方形有 $n$ 个，那么这部分的答案为 $\displaystyle \sum_{i=1}^{n}{n\choose i}\frac{k^{4i}+k^{2i}+2k^{i}}{4}=\frac{(k^{4}+1)^{n}+(k^{2}+1)^{n}+(k+1)^{n}}{4}-1$，当然这里还需要减去将每个正方形看做两条线段的答案。还需要注意旋转中心有一个点的情况，这个点也是可选的。这题有些卡空间，需要手写 hash 。时间复杂度 $\mathcal{O}(n^{2})$。

coldwater's comment:

不存在整点正 $n(n> 4)$ 边形是一个比较常用的结论。简单证明，如果存在，设边长最小的一个是 $A_1A_2\cdots A_n$，那么把 $A_i$ 绕 $A_{i+1}$ 逆时针转 $90^{\circ}$，得到的新图形是一个边长更小的整点正 $n$ 边形，矛盾。同样有理数正 $n$ 边形也不存在，否则乘上坐标分母的 $\text{lcm}$ 就是整点正 $n$ 边形。

## D. Rikka with Prefix Sum

**题目大意**：给出一个长度为 $n\le10^5$ 的数列，$m\le10^5$ 操作，每次操作或者给一个区间每个位置都加上一个数，或者将整个数列变成它的前缀和，或者询问区间和，取模。保证询问的次数 $k\le500$。

**题解**：将区间加拆成两个后缀加，区间和拆成两个前缀和。每当有一次变前缀和的操作就给数列的 $\text{rk++}$ ，对于每个后缀加操作记录它的 $\text{rk}$ 和位置 $c$ 。当遇到询问操作的时候，扫一遍后缀加操作统计答案。

若某次后缀加操作与数列当前的 $\text{rk}$ 差为 $r-1$，影响位置与前缀和询问位置的差为 $c-1$，加上的值为 $w$，那么贡献为 $\displaystyle w\times\binom{r+c-1}{r}$。时间复杂度 $\mathcal{O}(n+km)$。

## E. Rikka with Equation

**题目大意**：设 $A$ 是一个多重集，定义 $f(A,m)$ 为同余方程 $A_{1}x_{1}+\cdots+A_{n}x_{n}\equiv0\pmod{m}$ 在 $[0,m)^{n}$ 上的解数。给你一个多重集 $S$ 和 $M$，求 $\displaystyle \bigoplus_{m=1}^{M}\sum_{A\subset S,A\neq \emptyset}f(A,m)$。

**题解**：首先证明：$f(A,m)=m^{|A|-1}gcd(A,m)$。容易发现 $A_{2}x_{2}+\cdots+A_{n}x_{n}\equiv0\pmod{\gcd(m,A_{1})}$ 是方程有解的必要条件，且对于任意一个这样的 $x_{2},\cdots,x_{n}$ 的解，我们恰有 $\gcd(m,A_{1})$ 个 $x_{1}$ 的解，因此我们可以递归地计算：$\displaystyle f(A,m)=\gcd(m,A_{1})(\frac{m}{\gcd(m,A_{1})})^{|A|-1}f(A\setminus \{A_{1}\},\gcd(m,A_{1}))$。使用数学归纳法即可证明上述结论。

那么对于一个 $m$，我们所求即为 $\displaystyle \sum_{A\subset S,A\neq \emptyset}m^{|A|-1}\gcd(A,m)$。设 $f(u)$ 表示 $u\mid \gcd(A,m)$ 的所有 $A$ 的 $m^{|A|-1}$ 之和，$g(u)$ 表示 $u=\gcd(A,m)$ 的所有 $A$ 的 $m^{|A|-1}$ 之和，那么答案即为 $\sum_{u\mid m}ug(u)$。$f(u)$ 较为容易计算，设 $\text{cnt}_{u}$ 表示 $S$ 中 $u$ 的倍数的数量，那么有 $\displaystyle f(u)=\sum_{i=1}^{\text{cnt}_{u}}{\text{cnt}_{u}\choose i}m^{i-1}=\frac{(m+1)^{\text{cnt}_{u}}}{m}$。根据容斥原理，我们又有 $g(u)=\sum_{u\mid d,d\mid m}f(d)\mu(d/u)$。这里已经可以计算了，感受了一下复杂度应该是 $\mathcal{O}(n\log^{2}n\log B)$。

但是我们还可以继续化简。原式等于：
$$
\begin{aligned}
&\sum_{u\mid m}u\sum_{u\mid d,d\mid m}f(d)\mu(d/u)\\
=&\sum_{d\mid m}f(d)\sum_{u\mid d}u\mu(d/u)\\
=&\sum_{d\mid m}f(d)\varphi(d)
\end{aligned}
$$
时间复杂度 $\mathcal{O}(n\log n\log B)$。~~这尼玛还不是 sb 题?~~

## H. Rikka with Ants

**题目大意**：在坐标平面上有两只蚂蚁，它们从 $(1,0)$ 开始走，每一步它们会从 $(x,y)$ 走到 $(x+1,y)$ 或 $(x,y+1)$。第一只蚂蚁不能穿过 $y=\frac{a}{b}x$，第二只蚂蚁不能穿过 $y=\frac{c}{d}x$，每只蚂蚁会尽可能先往上走，再往右走。求两只蚂蚁经过的公共整点的数量。

**题解**：显然 $\frac{a}{b}=\frac{c}{d}$ 时，公共整点有无穷个。否则，直线 $y=x$ 上两只蚂蚁走过的区间分别为 $[\lfloor\frac{ax-a}{b}\rfloor,\lfloor\frac{ax}{b}\rfloor]$ 和 $[\lfloor\frac{cx-c}{d}\rfloor,\lfloor\frac{cx}{d}\rfloor]$，那么答案即为 $\sum_{x=1}^{+\infty}\max\{\min\{\lfloor\frac{ax}{b}\rfloor,\lfloor\frac{cx}{d}\rfloor\}-\max\{\lfloor\frac{ax-a}{b}\rfloor,\lfloor\frac{cx-c}{d}\rfloor\}+1,0\}$。不妨设 $\frac{a}{b}>\frac{c}{d}$，有答案为 $\sum_{x=1}^{+\infty}max\{\lfloor\frac{cx}{d}\rfloor-\lfloor\frac{ax-a}{b}\rfloor+1,0\}$。为了后面求类欧方便，把式子变换成 $\sum_{x=0}^{+\infty}max\{\lfloor\frac{cx+c}{d}\rfloor-\lfloor\frac{ax}{b}\rfloor+1,0\}$。注意到，当 $\frac{cx+c}{d}<\frac{ax}{b}-1$ 时，有 $\lfloor\frac{cx+c}{d}\rfloor-\lfloor\frac{ax}{b}\rfloor+1\le0$，因此不用计算贡献；而 $\frac{cx+c}{d}\ge\frac{ax}{b}-1$ 时，有 $\lfloor\frac{cx+c}{d}\rfloor-\lfloor\frac{ax}{b}\rfloor+1\ge0$，可以计算贡献。设 $X=\lfloor\frac{bc+bd}{ad-bc}\rfloor$，那么答案即为 $\sum_{x=0}^{X}\lfloor\frac{cx+c}{d}\rfloor-\lfloor\frac{ax}{b}\rfloor+1$，使用类欧计算即可。

时间复杂度 $\mathcal{O}(\log\max\{a,b,c,d\})$。

# Dirt Replay

F: `-4` 前三次代码错误但是 TLE，抠常数；算法正确之后，没有把 log 去掉，TLE

J: `-1` 清空数组没有清 ch[0]